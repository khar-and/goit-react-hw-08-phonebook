{"version":3,"file":"static/js/207.e5677169.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://react-homework-template/./src/components/EmptyContactList/EmptyContactList.module.css?d3cd","components/EmptyContactList/EmptyContactList.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\n\nimport { createContactsThunk } from 'redux/contacts/thunk';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const data = { name, number };\n    const newObj = { ...data, id: nanoid() };\n\n    if (isNameNew(contacts, newObj) !== undefined) {\n      toast.warning(`${newObj.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(createContactsThunk(newObj))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    reset();\n  };\n\n  const isNameNew = (contacts, newObj) => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newObj.name.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.container}>\n      <form className={css.form} onSubmit={onSubmitAddContact}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Enter name ...\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            value={number}\n            placeholder=\"Enter number ...\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSet, selectContactsFilter } from 'redux/filters/slice';\nimport css from './Filter.module.css';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <div>\n      <label className={css.label}>\n        Find contacts by name:\n        <input\n          className={css.input}\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperError\":\"Error_wrapperError__3jywT\"};","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/contactsSelectors';\n\nimport css from './Error.module.css';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <div className={css.wrapperError}>\n      <p> Sorry, {error}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"emptyContactsList\":\"EmptyContactList_emptyContactsList__M9xN8\"};","import css from './EmptyContactList.module.css';\n\nexport const EmptyContactsList = () => {\n  return (\n    <div className={css.emptyContactsList}>\n      <h1>No Contacts yet</h1>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/contacts/thunk';\nimport { selectContactsFilter } from 'redux/filters/slice';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name?.toLowerCase().includes(filter)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n  };\n  return (\n    <ul className={css.list}>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <li className={css.item} key={id}>\n            <span>{name}</span>\n            <span>{number}</span>\n            <button\n              className={css.button}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\"};","import * as React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Error } from 'components/Error/Error';\n\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectContactsList,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { EmptyContactsList } from 'components/EmptyContactList/EmptyContactList';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from './ContactsPage.module.css';\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const phoneBook = useSelector(selectContactsList);\n\n  return (\n    <div className={css.container}>\n      <ContactForm />\n      <Filter />\n      {error ? <Error /> : <ContactList />}\n      {phoneBook.length === 0 && !error && !isLoading && <EmptyContactsList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleChange","_ref","_ref$target","target","value","isNameNew","newObj","find","_ref2","toLowerCase","reset","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","data","_objectSpread","id","nanoid","undefined","createContactsThunk","unwrap","then","originalPromiseResult","toast","concat","catch","type","pattern","title","onChange","placeholder","required","Filter","filter","selectContactsFilter","currentTarget","filterSet","Error","EmptyContactsList","ContactList","useEffect","getContactsThunk","visibleContacts","includes","map","onClick","contactId","deleteContactsThunk","phoneBook","length"],"sourceRoot":""}